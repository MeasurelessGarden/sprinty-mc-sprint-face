/*
  Note: the 'sprints' generated by these methods are not necessarily
  the final sprint object - they generate only sprint start and end times,
  and as such it may not be appropriate to call the result a 'sprint' yet.
*/

const createTimeAtNextMinute = (baseTime, minute) => {
  const date = new Date(baseTime)
  date.setMinutes(minute)
  date.setSeconds(0)
  date.setMilliseconds(0)
  if (date <= baseTime) {
    date.setHours(date.getHours() + 1)
  }
  return date
}

const createTimeWithDelta = (baseTime, minutes) => {
  const date = new Date(baseTime)
  date.setMinutes(date.getMinutes() + minutes)
  date.setSeconds(0)
  date.setMilliseconds(0)
  return date
}

const createSprint = (timestamp, start, end) => {
  return {
    sprint: {
      // TODO rename absolute?
      start: start,
      end: end,
    },
    timeout: {
      // TODO rename relative?
      start: start - timestamp,
      end: end - timestamp,
    },
  }
}

export const generateSprintInDeltaWithEndTime = (timestamp, delta, endMin) => {
  // TODO write some dang tests for this!
  // timestamp, a number representing a time
  // delta, a number between 1 and 60
  // endMin, a number between 0 and 59
  const start = createTimeWithDelta(timestamp, delta)
  const end = createTimeAtNextMinute(start, endMin)
  return createSprint(timestamp, start.getTime(), end.getTime())
}

export const generateSprintInDeltaWithDuration = (
  timestamp,
  delta,
  duration
) => {
  // TODO write some dang tests for this!
  // timestamp, a number representing a time
  // delta, a number between 1 and 60
  // duration, a number between 1 and 60
  const start = createTimeWithDelta(timestamp, delta)
  const end = createTimeWithDelta(start, duration)
  return createSprint(timestamp, start.getTime(), end.getTime())
}

export const generateSprintWithEndTime = (timestamp, startMin, endMin) => {
  // timestamp, a number representing a time
  // startMin, a number between 0 and 59
  // endMin, a number between 0 and 59
  const start = createTimeAtNextMinute(timestamp, startMin)
  const end = createTimeAtNextMinute(start, endMin)
  return createSprint(timestamp, start.getTime(), end.getTime())
}

export const generateSprintWithDuration = (timestamp, startMin, duration) => {
  // timestamp, a number representing a time
  // start, a number between 0 and 59
  // duration, a number between 1 and 60
  const start = createTimeAtNextMinute(timestamp, startMin)
  const end = createTimeWithDelta(start, duration)
  return createSprint(timestamp, start.getTime(), end.getTime())
}
